{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodapp\\\\frontend\\\\src\\\\components\\\\Food.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './Food.css';\nimport { initializeApp } from 'firebase/app';\nimport { getStorage, ref, uploadBytes, getDownloadURL, deleteObject } from 'firebase/storage';\nimport { getDatabase, ref as dbRef, set } from 'firebase/database';\n\n// Initialize Firebase (Replace with your Firebase config)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB-L2pj_4XVH9y7VBYOSAsTsT8p4cveHZY\",\n  authDomain: \"foodai-7ebf0.firebaseapp.com\",\n  databaseURL: \"https://foodai-7ebf0-default-rtdb.firebaseio.com\",\n  projectId: \"foodai-7ebf0\",\n  storageBucket: \"foodai-7ebf0.firebasestorage.app\",\n  messagingSenderId: \"1802738846\",\n  appId: \"1:1802738846:web:f6985b95b8487ce3c7ef8f\",\n  measurementId: \"G-QJWXCZ7Y56\"\n};\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\nconst Food = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [imagePath, setImagePath] = useState(null); // Store the path to delete from Firebase\n  const [result, setResult] = useState(null);\n  const [location, setLocation] = useState(null);\n\n  // Handle image upload and preview\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setImage(file);\n      setImagePreview(URL.createObjectURL(file));\n    }\n  };\n\n  // Reset the form and delete the image from Firebase\n  const resetAnalysis = async () => {\n    // Delete the uploaded image from Firebase Storage if path exists\n    if (imagePath) {\n      try {\n        const storageRef = firebase.storage().ref(imagePath);\n        await storageRef.delete();\n        console.log(\"Image deleted from Firebase.\");\n      } catch (error) {\n        console.error(\"Error deleting image from Firebase:\", error);\n      }\n    }\n\n    // Reset state variables\n    setImage(null);\n    setImagePreview(null);\n    setImagePath(null);\n    setResult(null);\n    setLocation(null);\n    fetchLocationCity(); // Fetch location again for new analysis\n  };\n\n  // Capture user's city name using Geolocation\n  const fetchLocationCity = async () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n        try {\n          const response = await fetch(`https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${lat}&longitude=${lon}&localityLanguage=en`);\n          const data = await response.json();\n          setLocation(data.city || \"Unknown City\");\n        } catch (error) {\n          console.error(\"Error fetching city:\", error);\n          setLocation(\"Unknown City\");\n        }\n      }, error => {\n        console.error(\"Error fetching location:\", error);\n        alert(\"Unable to fetch location. Please enable location services.\");\n      });\n    } else {\n      alert(\"Geolocation is not supported by your browser.\");\n    }\n  };\n\n  // Upload image and analyze food\n  const analyzeFood = async () => {\n    if (!image) {\n      alert(\"Please upload an image first.\");\n      return;\n    }\n    if (!location) {\n      alert(\"Fetching location. Please try again in a moment.\");\n      return;\n    }\n    const storageRef = firebase.storage().ref();\n    const filePath = `images/${Date.now()}_${image.name}`;\n    const fileRef = storageRef.child(filePath);\n    try {\n      // Upload image to Firebase Storage\n      const snapshot = await fileRef.put(image);\n      const downloadURL = await snapshot.ref.getDownloadURL();\n\n      // Save the file path for deletion on reset\n      setImagePath(filePath);\n\n      // Save the image URL and location to Firebase Realtime Database\n      const db = firebase.database();\n      await db.ref(\"foodImages\").push({\n        imageUrl: downloadURL,\n        location: location\n      });\n\n      // Send the image URL and location city to FastAPI\n      const response = await fetch(\"https://foodapi-sa0l.onrender.com\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          image_url: downloadURL,\n          location: location\n        })\n      });\n      const data = await response.json();\n\n      // Extract only the required details from the response\n      const isExpired = new Date(data.meta_data.exp_date) < new Date();\n      const daysToExpire = isExpired ? 0 : Math.ceil((new Date(data.meta_data.exp_date) - new Date()) / (1000 * 60 * 60 * 24));\n      setResult({\n        isExpired,\n        daysToExpire\n      });\n    } catch (error) {\n      console.error(\"Error analyzing food:\", error);\n      setResult({\n        isExpired: null,\n        daysToExpire: null\n      });\n    }\n  };\n\n  // Fetch location on component mount\n  useEffect(() => {\n    fetchLocationCity();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"food-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"food-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"food-title\",\n        children: \"AI Food Analyzer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"food-description\",\n      children: \"Upload or capture food photos to check for spoilage. Our AI ensures quality by detecting signs of freshness or decay.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"file-input\",\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"analyze-button\",\n        onClick: analyzeFood,\n        children: \"\\uD83D\\uDD0D Analyze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-button\",\n        onClick: resetAnalysis,\n        children: \"\\uD83D\\uDD04 Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"image-preview-large\",\n          src: imagePreview,\n          alt: \"Analyzed food\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-container\",\n        children: result.isExpired !== null && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"result-text\",\n            children: result.isExpired ? \"⚠️ The food is expired.\" : `✅ The food is fresh. Days until expiry: ${result.daysToExpire}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(Food, \"2wTxymVOw3CQtdWwWZaQz/Zsbtg=\");\n_c = Food;\nexport default Food;\nvar _c;\n$RefreshReg$(_c, \"Food\");","map":{"version":3,"names":["React","useState","useEffect","initializeApp","getStorage","ref","uploadBytes","getDownloadURL","deleteObject","getDatabase","dbRef","set","jsxDEV","_jsxDEV","Fragment","_Fragment","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","apps","length","Food","_s","image","setImage","imagePreview","setImagePreview","imagePath","setImagePath","result","setResult","location","setLocation","handleImageUpload","e","file","target","files","URL","createObjectURL","resetAnalysis","storageRef","storage","delete","console","log","error","fetchLocationCity","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","response","fetch","data","json","city","alert","analyzeFood","filePath","Date","now","name","fileRef","child","snapshot","put","downloadURL","db","database","push","imageUrl","method","headers","body","JSON","stringify","image_url","isExpired","meta_data","exp_date","daysToExpire","Math","ceil","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/foodapp/frontend/src/components/Food.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './Food.css';\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, deleteObject } from 'firebase/storage';\r\nimport { getDatabase, ref as dbRef, set } from 'firebase/database';\r\n\r\n\r\n// Initialize Firebase (Replace with your Firebase config)\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB-L2pj_4XVH9y7VBYOSAsTsT8p4cveHZY\",\r\n  authDomain: \"foodai-7ebf0.firebaseapp.com\",\r\n  databaseURL: \"https://foodai-7ebf0-default-rtdb.firebaseio.com\",\r\n  projectId: \"foodai-7ebf0\",\r\n  storageBucket: \"foodai-7ebf0.firebasestorage.app\",\r\n  messagingSenderId: \"1802738846\",\r\n  appId: \"1:1802738846:web:f6985b95b8487ce3c7ef8f\",\r\n  measurementId: \"G-QJWXCZ7Y56\"\r\n};\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nconst Food = () => {\r\n  const [image, setImage] = useState(null);\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [imagePath, setImagePath] = useState(null); // Store the path to delete from Firebase\r\n  const [result, setResult] = useState(null);\r\n  const [location, setLocation] = useState(null);\r\n\r\n  // Handle image upload and preview\r\n  const handleImageUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setImage(file);\r\n      setImagePreview(URL.createObjectURL(file));\r\n    }\r\n  };\r\n\r\n  // Reset the form and delete the image from Firebase\r\n  const resetAnalysis = async () => {\r\n    // Delete the uploaded image from Firebase Storage if path exists\r\n    if (imagePath) {\r\n      try {\r\n        const storageRef = firebase.storage().ref(imagePath);\r\n        await storageRef.delete();\r\n        console.log(\"Image deleted from Firebase.\");\r\n      } catch (error) {\r\n        console.error(\"Error deleting image from Firebase:\", error);\r\n      }\r\n    }\r\n\r\n    // Reset state variables\r\n    setImage(null);\r\n    setImagePreview(null);\r\n    setImagePath(null);\r\n    setResult(null);\r\n    setLocation(null);\r\n\r\n    fetchLocationCity(); // Fetch location again for new analysis\r\n  };\r\n\r\n  // Capture user's city name using Geolocation\r\n  const fetchLocationCity = async () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        async (position) => {\r\n          const lat = position.coords.latitude;\r\n          const lon = position.coords.longitude;\r\n\r\n          try {\r\n            const response = await fetch(\r\n              `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${lat}&longitude=${lon}&localityLanguage=en`\r\n            );\r\n            const data = await response.json();\r\n            setLocation(data.city || \"Unknown City\");\r\n          } catch (error) {\r\n            console.error(\"Error fetching city:\", error);\r\n            setLocation(\"Unknown City\");\r\n          }\r\n        },\r\n        (error) => {\r\n          console.error(\"Error fetching location:\", error);\r\n          alert(\"Unable to fetch location. Please enable location services.\");\r\n        }\r\n      );\r\n    } else {\r\n      alert(\"Geolocation is not supported by your browser.\");\r\n    }\r\n  };\r\n\r\n  // Upload image and analyze food\r\n  const analyzeFood = async () => {\r\n    if (!image) {\r\n      alert(\"Please upload an image first.\");\r\n      return;\r\n    }\r\n\r\n    if (!location) {\r\n      alert(\"Fetching location. Please try again in a moment.\");\r\n      return;\r\n    }\r\n\r\n    const storageRef = firebase.storage().ref();\r\n    const filePath = `images/${Date.now()}_${image.name}`;\r\n    const fileRef = storageRef.child(filePath);\r\n\r\n    try {\r\n      // Upload image to Firebase Storage\r\n      const snapshot = await fileRef.put(image);\r\n      const downloadURL = await snapshot.ref.getDownloadURL();\r\n\r\n      // Save the file path for deletion on reset\r\n      setImagePath(filePath);\r\n\r\n      // Save the image URL and location to Firebase Realtime Database\r\n      const db = firebase.database();\r\n      await db.ref(\"foodImages\").push({\r\n        imageUrl: downloadURL,\r\n        location: location,\r\n      });\r\n\r\n      // Send the image URL and location city to FastAPI\r\n      const response = await fetch(\"https://foodapi-sa0l.onrender.com\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          image_url: downloadURL,\r\n          location: location,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      // Extract only the required details from the response\r\n      const isExpired = new Date(data.meta_data.exp_date) < new Date();\r\n      const daysToExpire = isExpired\r\n        ? 0\r\n        : Math.ceil(\r\n            (new Date(data.meta_data.exp_date) - new Date()) /\r\n            (1000 * 60 * 60 * 24)\r\n          );\r\n\r\n      setResult({\r\n        isExpired,\r\n        daysToExpire,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error analyzing food:\", error);\r\n      setResult({\r\n        isExpired: null,\r\n        daysToExpire: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Fetch location on component mount\r\n  useEffect(() => {\r\n    fetchLocationCity();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"food-container\">\r\n      <div className=\"food-header\">\r\n        <h1 className=\"food-title\">AI Food Analyzer</h1>\r\n      </div>\r\n      <p className=\"food-description\">\r\n        Upload or capture food photos to check for spoilage. \r\n        Our AI ensures quality by detecting signs of freshness or decay.\r\n      </p>\r\n      <div className=\"upload-container\">\r\n        <input className=\"file-input\" type=\"file\" accept=\"image/*\" onChange={handleImageUpload} />\r\n        <button className=\"analyze-button\" onClick={analyzeFood}>🔍 Analyze</button>\r\n        <button className=\"reset-button\" onClick={resetAnalysis}>🔄 Reset</button>\r\n      </div>\r\n      {result && (\r\n        <div className=\"analysis-result\">\r\n          <div className=\"image-preview-container\">\r\n            <img className=\"image-preview-large\" src={imagePreview} alt=\"Analyzed food\" />\r\n          </div>\r\n          <div className=\"result-container\">\r\n            {result.isExpired !== null && (\r\n              <>\r\n                <p className=\"result-text\">\r\n                  {result.isExpired\r\n                    ? \"⚠️ The food is expired.\"\r\n                    : `✅ The food is fresh. Days until expiry: ${result.daysToExpire}`}\r\n                </p>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Food;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}