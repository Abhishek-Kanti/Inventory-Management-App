{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodapp\\\\frontend\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getDatabase, ref, get } from \"firebase/database\";\nimport \"./Home.css\";\n\n// Initialize Firebase (ensure Firebase is already initialized in your app)\nimport { initializeApp } from \"firebase/app\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB-L2pj_4XVH9y7VBYOSAsTsT8p4cveHZY\",\n  authDomain: \"foodai-7ebf0.firebaseapp.com\",\n  databaseURL: \"https://foodai-7ebf0-default-rtdb.firebaseio.com\",\n  projectId: \"foodai-7ebf0\",\n  storageBucket: \"foodai-7ebf0.appspot.com\",\n  messagingSenderId: \"1802738846\",\n  appId: \"1:1802738846:web:f6985b95b8487ce3c7ef8f\",\n  measurementId: \"G-QJWXCZ7Y56\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\nconst Home = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // State to hold the inventory data\n  const [inventoryData, setInventoryData] = useState({\n    totalItems: 0,\n    categories: {\n      others: 0,\n      fruits: 0,\n      dairy: 0,\n      vegetables: 0\n    }\n  });\n\n  // Function to fetch inventory data from Firebase\n  const fetchInventoryData = async () => {\n    try {\n      const dbRef = ref(database);\n      const snapshot = await get(dbRef);\n      if (snapshot.exists()) {\n        const data = snapshot.val();\n        let totalItems = 0;\n        let categories = {\n          others: 0,\n          fruits: 0,\n          dairy: 0,\n          vegetables: 0\n        };\n\n        // Log the data fetched from Firebase for debugging\n        console.log(\"Data fetched from Firebase:\", data);\n\n        // Loop through the categories in Firebase and calculate the totals\n        for (const category in data) {\n          if (data[category] && typeof data[category] === \"object\") {\n            for (const type in data[category]) {\n              try {\n                var _data$category$type;\n                const itemCount = ((_data$category$type = data[category][type]) === null || _data$category$type === void 0 ? void 0 : _data$category$type.count) || 0; // Ensure to get count value, default to 0\n                totalItems += itemCount;\n\n                // Log each type and its count\n                console.log(`Category: ${category}, Type: ${type}, Count: ${itemCount}`);\n\n                // Update the category count\n                if (category === \"others\") categories.others += itemCount;\n                if (category === \"fruits\") categories.fruits += itemCount;\n                if (category === \"dairy\") categories.dairy += itemCount;\n                if (category === \"vegetables\") categories.vegetables += itemCount;\n              } catch (innerError) {\n                console.error(`Error processing type '${type}' in category '${category}':`, innerError);\n              }\n            }\n          }\n        }\n\n        // Log the total count for debugging\n        console.log(\"Total Items:\", totalItems);\n        console.log(\"Category Totals:\", categories);\n\n        // Set the inventory data to state\n        setInventoryData({\n          totalItems: totalItems,\n          categories: {\n            others: categories.others,\n            fruits: categories.fruits,\n            dairy: categories.dairy,\n            vegetables: categories.vegetables\n          }\n        });\n      } else {\n        console.warn(\"No data available in Firebase database.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching inventory data from Firebase:\", error);\n    }\n  };\n\n  // Fetch inventory data when the component is mounted\n  useEffect(() => {\n    fetchInventoryData();\n  }, []);\n\n  // Redirect functions\n  const handleRedirectToInventory = () => {\n    navigate(\"/inventory\");\n  };\n  const handleRedirectToFoodAnalyzer = () => {\n    navigate(\"/food\");\n  };\n  const handleRedirectToAIManager = () => {\n    navigate(\"/ai-manager\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"home-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"INVENTORY MANAGEMENT SYSTEM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-icon\",\n        children: \"A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inventory-summary button-card\",\n      onClick: handleRedirectToInventory,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Inventory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circle-chart\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"item-count\",\n          children: inventoryData.totalItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"item-label\",\n          children: \"Items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot others\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), \" Others (\", inventoryData.categories.others, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot fruits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), \" Fruits (\", inventoryData.categories.fruits, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot dairy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), \" Dairy (\", inventoryData.categories.dairy, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot vegetables\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), \" Vegetables (\", inventoryData.categories.vegetables, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"additional-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-box button-card\",\n        onClick: handleRedirectToFoodAnalyzer,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"AI Food Analyzer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://img.icons8.com/color/64/camera.png\",\n          alt: \"Sensor Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-box button-card\",\n        onClick: handleRedirectToAIManager,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"AI INVENTORY MANAGER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://img.icons8.com/color/64/artificial-intelligence.png\",\n          alt: \"AI Inventory Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"RH6jRzqdNTGHYUuEtMsEKnc/iw4=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","getDatabase","ref","get","initializeApp","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","database","Home","_s","navigate","inventoryData","setInventoryData","totalItems","categories","others","fruits","dairy","vegetables","fetchInventoryData","dbRef","snapshot","exists","data","val","console","log","category","type","_data$category$type","itemCount","count","innerError","error","warn","handleRedirectToInventory","handleRedirectToFoodAnalyzer","handleRedirectToAIManager","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/foodapp/frontend/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getDatabase, ref, get } from \"firebase/database\";\r\nimport \"./Home.css\";\r\n\r\n// Initialize Firebase (ensure Firebase is already initialized in your app)\r\nimport { initializeApp } from \"firebase/app\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB-L2pj_4XVH9y7VBYOSAsTsT8p4cveHZY\",\r\n  authDomain: \"foodai-7ebf0.firebaseapp.com\",\r\n  databaseURL: \"https://foodai-7ebf0-default-rtdb.firebaseio.com\",\r\n  projectId: \"foodai-7ebf0\",\r\n  storageBucket: \"foodai-7ebf0.appspot.com\",\r\n  messagingSenderId: \"1802738846\",\r\n  appId: \"1:1802738846:web:f6985b95b8487ce3c7ef8f\",\r\n  measurementId: \"G-QJWXCZ7Y56\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst database = getDatabase(app);\r\n\r\nconst Home = () => {\r\n  const navigate = useNavigate();\r\n\r\n  // State to hold the inventory data\r\n  const [inventoryData, setInventoryData] = useState({\r\n    totalItems: 0,\r\n    categories: {\r\n      others: 0,\r\n      fruits: 0,\r\n      dairy: 0,\r\n      vegetables: 0,\r\n    },\r\n  });\r\n\r\n  // Function to fetch inventory data from Firebase\r\n  const fetchInventoryData = async () => {\r\n    try {\r\n      const dbRef = ref(database);\r\n      const snapshot = await get(dbRef);\r\n\r\n      if (snapshot.exists()) {\r\n        const data = snapshot.val();\r\n        let totalItems = 0;\r\n        let categories = {\r\n          others: 0,\r\n          fruits: 0,\r\n          dairy: 0,\r\n          vegetables: 0,\r\n        };\r\n\r\n        // Log the data fetched from Firebase for debugging\r\n        console.log(\"Data fetched from Firebase:\", data);\r\n\r\n        // Loop through the categories in Firebase and calculate the totals\r\n        for (const category in data) {\r\n          if (data[category] && typeof data[category] === \"object\") {\r\n            for (const type in data[category]) {\r\n              try {\r\n                const itemCount = data[category][type]?.count || 0; // Ensure to get count value, default to 0\r\n                totalItems += itemCount;\r\n\r\n                // Log each type and its count\r\n                console.log(\r\n                  `Category: ${category}, Type: ${type}, Count: ${itemCount}`\r\n                );\r\n\r\n                // Update the category count\r\n                if (category === \"others\") categories.others += itemCount;\r\n                if (category === \"fruits\") categories.fruits += itemCount;\r\n                if (category === \"dairy\") categories.dairy += itemCount;\r\n                if (category === \"vegetables\") categories.vegetables += itemCount;\r\n              } catch (innerError) {\r\n                console.error(\r\n                  `Error processing type '${type}' in category '${category}':`,\r\n                  innerError\r\n                );\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Log the total count for debugging\r\n        console.log(\"Total Items:\", totalItems);\r\n        console.log(\"Category Totals:\", categories);\r\n\r\n        // Set the inventory data to state\r\n        setInventoryData({\r\n          totalItems: totalItems,\r\n          categories: {\r\n            others: categories.others,\r\n            fruits: categories.fruits,\r\n            dairy: categories.dairy,\r\n            vegetables: categories.vegetables,\r\n          },\r\n        });\r\n      } else {\r\n        console.warn(\"No data available in Firebase database.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching inventory data from Firebase:\", error);\r\n    }\r\n  };\r\n\r\n  // Fetch inventory data when the component is mounted\r\n  useEffect(() => {\r\n    fetchInventoryData();\r\n  }, []);\r\n\r\n  // Redirect functions\r\n  const handleRedirectToInventory = () => {\r\n    navigate(\"/inventory\");\r\n  };\r\n\r\n  const handleRedirectToFoodAnalyzer = () => {\r\n    navigate(\"/food\");\r\n  };\r\n\r\n  const handleRedirectToAIManager = () => {\r\n    navigate(\"/ai-manager\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <header className=\"home-header\">\r\n        <h1>INVENTORY MANAGEMENT SYSTEM</h1>\r\n        <div className=\"user-icon\">A</div>\r\n      </header>\r\n\r\n      <div className=\"inventory-summary button-card\" onClick={handleRedirectToInventory}>\r\n        <h2>Inventory</h2>\r\n        <div className=\"circle-chart\">\r\n          <p className=\"item-count\">{inventoryData.totalItems}</p>\r\n          <p className=\"item-label\">Items</p>\r\n        </div>\r\n        <div className=\"legend\">\r\n          <div>\r\n            <span className=\"dot others\"></span> Others ({inventoryData.categories.others})\r\n          </div>\r\n          <div>\r\n            <span className=\"dot fruits\"></span> Fruits ({inventoryData.categories.fruits})\r\n          </div>\r\n          <div>\r\n            <span className=\"dot dairy\"></span> Dairy ({inventoryData.categories.dairy})\r\n          </div>\r\n          <div>\r\n            <span className=\"dot vegetables\"></span> Vegetables ({inventoryData.categories.vegetables})\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"additional-info\">\r\n        <div className=\"info-box button-card\" onClick={handleRedirectToFoodAnalyzer}>\r\n          <h3>AI Food Analyzer</h3>\r\n          <img src=\"https://img.icons8.com/color/64/camera.png\" alt=\"Sensor Data\" />\r\n        </div>\r\n\r\n        <div className=\"info-box button-card\" onClick={handleRedirectToAIManager}>\r\n          <h3>AI INVENTORY MANAGER</h3>\r\n          <img src=\"https://img.icons8.com/color/64/artificial-intelligence.png\" alt=\"AI Inventory Manager\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,EAAEC,GAAG,EAAEC,GAAG,QAAQ,mBAAmB;AACzD,OAAO,YAAY;;AAEnB;AACA,SAASC,aAAa,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,8BAA8B;EAC1CC,WAAW,EAAE,kDAAkD;EAC/DC,SAAS,EAAE,cAAc;EACzBC,aAAa,EAAE,0BAA0B;EACzCC,iBAAiB,EAAE,YAAY;EAC/BC,KAAK,EAAE,yCAAyC;EAChDC,aAAa,EAAE;AACjB,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGZ,aAAa,CAACG,cAAc,CAAC;AACzC,MAAMU,QAAQ,GAAGhB,WAAW,CAACe,GAAG,CAAC;AAEjC,MAAME,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGpB,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM,CAACqB,aAAa,EAAEC,gBAAgB,CAAC,GAAGxB,QAAQ,CAAC;IACjDyB,UAAU,EAAE,CAAC;IACbC,UAAU,EAAE;MACVC,MAAM,EAAE,CAAC;MACTC,MAAM,EAAE,CAAC;MACTC,KAAK,EAAE,CAAC;MACRC,UAAU,EAAE;IACd;EACF,CAAC,CAAC;;EAEF;EACA,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMC,KAAK,GAAG5B,GAAG,CAACe,QAAQ,CAAC;MAC3B,MAAMc,QAAQ,GAAG,MAAM5B,GAAG,CAAC2B,KAAK,CAAC;MAEjC,IAAIC,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE;QACrB,MAAMC,IAAI,GAAGF,QAAQ,CAACG,GAAG,CAAC,CAAC;QAC3B,IAAIX,UAAU,GAAG,CAAC;QAClB,IAAIC,UAAU,GAAG;UACfC,MAAM,EAAE,CAAC;UACTC,MAAM,EAAE,CAAC;UACTC,KAAK,EAAE,CAAC;UACRC,UAAU,EAAE;QACd,CAAC;;QAED;QACAO,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEH,IAAI,CAAC;;QAEhD;QACA,KAAK,MAAMI,QAAQ,IAAIJ,IAAI,EAAE;UAC3B,IAAIA,IAAI,CAACI,QAAQ,CAAC,IAAI,OAAOJ,IAAI,CAACI,QAAQ,CAAC,KAAK,QAAQ,EAAE;YACxD,KAAK,MAAMC,IAAI,IAAIL,IAAI,CAACI,QAAQ,CAAC,EAAE;cACjC,IAAI;gBAAA,IAAAE,mBAAA;gBACF,MAAMC,SAAS,GAAG,EAAAD,mBAAA,GAAAN,IAAI,CAACI,QAAQ,CAAC,CAACC,IAAI,CAAC,cAAAC,mBAAA,uBAApBA,mBAAA,CAAsBE,KAAK,KAAI,CAAC,CAAC,CAAC;gBACpDlB,UAAU,IAAIiB,SAAS;;gBAEvB;gBACAL,OAAO,CAACC,GAAG,CACT,aAAaC,QAAQ,WAAWC,IAAI,YAAYE,SAAS,EAC3D,CAAC;;gBAED;gBACA,IAAIH,QAAQ,KAAK,QAAQ,EAAEb,UAAU,CAACC,MAAM,IAAIe,SAAS;gBACzD,IAAIH,QAAQ,KAAK,QAAQ,EAAEb,UAAU,CAACE,MAAM,IAAIc,SAAS;gBACzD,IAAIH,QAAQ,KAAK,OAAO,EAAEb,UAAU,CAACG,KAAK,IAAIa,SAAS;gBACvD,IAAIH,QAAQ,KAAK,YAAY,EAAEb,UAAU,CAACI,UAAU,IAAIY,SAAS;cACnE,CAAC,CAAC,OAAOE,UAAU,EAAE;gBACnBP,OAAO,CAACQ,KAAK,CACX,0BAA0BL,IAAI,kBAAkBD,QAAQ,IAAI,EAC5DK,UACF,CAAC;cACH;YACF;UACF;QACF;;QAEA;QACAP,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEb,UAAU,CAAC;QACvCY,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEZ,UAAU,CAAC;;QAE3C;QACAF,gBAAgB,CAAC;UACfC,UAAU,EAAEA,UAAU;UACtBC,UAAU,EAAE;YACVC,MAAM,EAAED,UAAU,CAACC,MAAM;YACzBC,MAAM,EAAEF,UAAU,CAACE,MAAM;YACzBC,KAAK,EAAEH,UAAU,CAACG,KAAK;YACvBC,UAAU,EAAEJ,UAAU,CAACI;UACzB;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACLO,OAAO,CAACS,IAAI,CAAC,yCAAyC,CAAC;MACzD;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;IACtE;EACF,CAAC;;EAED;EACA5C,SAAS,CAAC,MAAM;IACd8B,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMgB,yBAAyB,GAAGA,CAAA,KAAM;IACtCzB,QAAQ,CAAC,YAAY,CAAC;EACxB,CAAC;EAED,MAAM0B,4BAA4B,GAAGA,CAAA,KAAM;IACzC1B,QAAQ,CAAC,OAAO,CAAC;EACnB,CAAC;EAED,MAAM2B,yBAAyB,GAAGA,CAAA,KAAM;IACtC3B,QAAQ,CAAC,aAAa,CAAC;EACzB,CAAC;EAED,oBACEd,OAAA;IAAK0C,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnB3C,OAAA;MAAQ0C,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC7B3C,OAAA;QAAA2C,QAAA,EAAI;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpC/C,OAAA;QAAK0C,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eAET/C,OAAA;MAAK0C,SAAS,EAAC,+BAA+B;MAACM,OAAO,EAAET,yBAA0B;MAAAI,QAAA,gBAChF3C,OAAA;QAAA2C,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClB/C,OAAA;QAAK0C,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B3C,OAAA;UAAG0C,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAE5B,aAAa,CAACE;QAAU;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxD/C,OAAA;UAAG0C,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACN/C,OAAA;QAAK0C,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrB3C,OAAA;UAAA2C,QAAA,gBACE3C,OAAA;YAAM0C,SAAS,EAAC;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,aAAS,EAAChC,aAAa,CAACG,UAAU,CAACC,MAAM,EAAC,GAChF;QAAA;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACN/C,OAAA;UAAA2C,QAAA,gBACE3C,OAAA;YAAM0C,SAAS,EAAC;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,aAAS,EAAChC,aAAa,CAACG,UAAU,CAACE,MAAM,EAAC,GAChF;QAAA;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACN/C,OAAA;UAAA2C,QAAA,gBACE3C,OAAA;YAAM0C,SAAS,EAAC;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,YAAQ,EAAChC,aAAa,CAACG,UAAU,CAACG,KAAK,EAAC,GAC7E;QAAA;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACN/C,OAAA;UAAA2C,QAAA,gBACE3C,OAAA;YAAM0C,SAAS,EAAC;UAAgB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,iBAAa,EAAChC,aAAa,CAACG,UAAU,CAACI,UAAU,EAAC,GAC5F;QAAA;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN/C,OAAA;MAAK0C,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9B3C,OAAA;QAAK0C,SAAS,EAAC,sBAAsB;QAACM,OAAO,EAAER,4BAA6B;QAAAG,QAAA,gBAC1E3C,OAAA;UAAA2C,QAAA,EAAI;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzB/C,OAAA;UAAKiD,GAAG,EAAC,4CAA4C;UAACC,GAAG,EAAC;QAAa;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvE,CAAC,eAEN/C,OAAA;QAAK0C,SAAS,EAAC,sBAAsB;QAACM,OAAO,EAAEP,yBAA0B;QAAAE,QAAA,gBACvE3C,OAAA;UAAA2C,QAAA,EAAI;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7B/C,OAAA;UAAKiD,GAAG,EAAC,6DAA6D;UAACC,GAAG,EAAC;QAAsB;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClC,EAAA,CA/IID,IAAI;EAAA,QACSlB,WAAW;AAAA;AAAAyD,EAAA,GADxBvC,IAAI;AAiJV,eAAeA,IAAI;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}