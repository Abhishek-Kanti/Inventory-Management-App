{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodapp\\\\frontend\\\\src\\\\components\\\\Food.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './Food.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Food = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setImage(file);\n      setImagePreview(URL.createObjectURL(file));\n      setError(null); // Clear any previous errors\n    } else {\n      setError(\"Please upload a valid image.\");\n    }\n  };\n  const handleCameraCapture = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      const videoElement = document.createElement('video');\n      videoElement.srcObject = stream;\n      videoElement.play();\n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n      videoElement.addEventListener('canplay', () => {\n        canvas.width = videoElement.videoWidth;\n        canvas.height = videoElement.videoHeight;\n        context.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\n        canvas.toBlob(blob => {\n          setImage(blob);\n          setImagePreview(canvas.toDataURL('image/jpeg'));\n          stream.getTracks().forEach(track => track.stop());\n        }, 'image/jpeg');\n      });\n    } catch (error) {\n      setError(\"Failed to access the camera. Please check your permissions.\");\n      console.error(\"Error accessing camera:\", error);\n    }\n  };\n  const analyzeFood = async () => {\n    if (!image) {\n      setError(\"Please upload or capture an image first.\");\n      return;\n    }\n    if (!navigator.geolocation) {\n      setError(\"Geolocation is not available on your device.\");\n      return;\n    }\n    setIsLoading(true); // Start loading\n\n    const formData = new FormData();\n    formData.append(\"file\", image);\n    let location;\n    try {\n      location = await new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(position => resolve(position), error => reject(\"Unable to fetch location.\"));\n      });\n    } catch (err) {\n      setError(\"Failed to fetch location. Please enable location services.\");\n      setIsLoading(false); // Stop loading\n      return;\n    }\n    const {\n      latitude,\n      longitude\n    } = location.coords;\n    const locationCity = await getCityFromCoordinates(latitude, longitude);\n    const imageLink = await uploadImageToCloudinary(image); // Assuming this is a function you have\n    if (!imageLink) {\n      setError(\"Error uploading image. Please try again.\");\n      setIsLoading(false); // Stop loading\n      return;\n    }\n    const payload = {\n      imageUrl: imageLink,\n      location: locationCity\n    };\n    try {\n      const response = await fetch(\"https://foodapi-sa0l.onrender.com/analyze\", {\n        method: \"POST\",\n        body: JSON.stringify(payload),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      if (data.error) {\n        setError(`Error analyzing food: ${data.error}`);\n      } else {\n        setResult(data);\n      }\n    } catch (error) {\n      setError(\"Error during upload or analysis. Please try again.\");\n      console.error(\"Error during analysis:\", error);\n    } finally {\n      setIsLoading(false); // Stop loading\n    }\n  };\n  const getCityFromCoordinates = async (latitude, longitude) => {\n    try {\n      var _data$results$;\n      const response = await fetch(`https://api.opencagedata.com/geocode/v1/json?q=${latitude}+${longitude}&key=YOUR_API_KEY`);\n      const data = await response.json();\n      return ((_data$results$ = data.results[0]) === null || _data$results$ === void 0 ? void 0 : _data$results$.components.city) || \"Unknown location\";\n    } catch (error) {\n      console.error(\"Error fetching city from coordinates:\", error);\n      return \"Unknown location\";\n    }\n  };\n  const uploadImageToCloudinary = async image => {\n    const formData = new FormData();\n    formData.append(\"file\", image);\n    formData.append(\"upload_preset\", \"food123\");\n    try {\n      const response = await fetch(`https://api.cloudinary.com/v1_1/dmf3jzijx/image/upload`, {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      if (data.secure_url) {\n        return data.secure_url;\n      } else {\n        throw new Error(\"Failed to upload image\");\n      }\n    } catch (error) {\n      console.error(\"Cloudinary upload error:\", error);\n      return null;\n    }\n  };\n  const handleReset = () => {\n    setImage(null);\n    setImagePreview(null);\n    setResult(null);\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"food-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"food-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"food-title\",\n        children: \"AI Food Analyzer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"food-description\",\n      children: \"Upload or capture food photos to check for spoilage. Our AI ensures quality by detecting signs of freshness or decay.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"file-input\",\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"analyze-button\",\n        onClick: handleCameraCapture,\n        children: \"\\uD83D\\uDCF7 Capture from Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"analyze-button analyze-large\",\n      onClick: analyzeFood,\n      disabled: isLoading,\n      children: isLoading ? \"Analyzing...\" : \"üîç Analyze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"image-preview-large\",\n          src: imagePreview,\n          alt: \"Analyzed food\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"result-text\",\n          children: [\"\\uD83E\\uDDEA Result: \", result.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), result.daysUntilSpoilage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"result-text\",\n          children: [\"\\u231B Days Until Spoilage: \", result.daysUntilSpoilage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset-button\",\n      onClick: handleReset,\n      children: \"\\uD83D\\uDD04 Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(Food, \"YhJU4qlOZ6VZ+MABtCWv0c7nWhI=\");\n_c = Food;\nexport default Food;\nvar _c;\n$RefreshReg$(_c, \"Food\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Food","_s","image","setImage","imagePreview","setImagePreview","result","setResult","error","setError","isLoading","setIsLoading","handleImageUpload","e","file","target","files","URL","createObjectURL","handleCameraCapture","stream","navigator","mediaDevices","getUserMedia","video","videoElement","document","createElement","srcObject","play","canvas","context","getContext","addEventListener","width","videoWidth","height","videoHeight","drawImage","toBlob","blob","toDataURL","getTracks","forEach","track","stop","console","analyzeFood","geolocation","formData","FormData","append","location","Promise","resolve","reject","getCurrentPosition","position","err","latitude","longitude","coords","locationCity","getCityFromCoordinates","imageLink","uploadImageToCloudinary","payload","imageUrl","response","fetch","method","body","JSON","stringify","headers","data","json","_data$results$","results","components","city","secure_url","Error","handleReset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","disabled","src","alt","status","daysUntilSpoilage","_c","$RefreshReg$"],"sources":["C:/foodapp/frontend/src/components/Food.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './Food.css';\r\n\r\nconst Food = () => {\r\n  const [image, setImage] = useState(null);\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [result, setResult] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleImageUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setImage(file);\r\n      setImagePreview(URL.createObjectURL(file));\r\n      setError(null);  // Clear any previous errors\r\n    } else {\r\n      setError(\"Please upload a valid image.\");\r\n    }\r\n  };\r\n\r\n  const handleCameraCapture = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n      const videoElement = document.createElement('video');\r\n      videoElement.srcObject = stream;\r\n      videoElement.play();\r\n\r\n      const canvas = document.createElement('canvas');\r\n      const context = canvas.getContext('2d');\r\n\r\n      videoElement.addEventListener('canplay', () => {\r\n        canvas.width = videoElement.videoWidth;\r\n        canvas.height = videoElement.videoHeight;\r\n        context.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\r\n        canvas.toBlob((blob) => {\r\n          setImage(blob);\r\n          setImagePreview(canvas.toDataURL('image/jpeg'));\r\n          stream.getTracks().forEach(track => track.stop());\r\n        }, 'image/jpeg');\r\n      });\r\n    } catch (error) {\r\n      setError(\"Failed to access the camera. Please check your permissions.\");\r\n      console.error(\"Error accessing camera:\", error);\r\n    }\r\n  };\r\n\r\n  const analyzeFood = async () => {\r\n    if (!image) {\r\n      setError(\"Please upload or capture an image first.\");\r\n      return;\r\n    }\r\n\r\n    if (!navigator.geolocation) {\r\n      setError(\"Geolocation is not available on your device.\");\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true); // Start loading\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", image);\r\n\r\n    let location;\r\n    try {\r\n      location = await new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => resolve(position),\r\n          (error) => reject(\"Unable to fetch location.\")\r\n        );\r\n      });\r\n    } catch (err) {\r\n      setError(\"Failed to fetch location. Please enable location services.\");\r\n      setIsLoading(false); // Stop loading\r\n      return;\r\n    }\r\n\r\n    const { latitude, longitude } = location.coords;\r\n    const locationCity = await getCityFromCoordinates(latitude, longitude);\r\n\r\n    const imageLink = await uploadImageToCloudinary(image); // Assuming this is a function you have\r\n    if (!imageLink) {\r\n      setError(\"Error uploading image. Please try again.\");\r\n      setIsLoading(false); // Stop loading\r\n      return;\r\n    }\r\n\r\n    const payload = {\r\n      imageUrl: imageLink,\r\n      location: locationCity,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"https://foodapi-sa0l.onrender.com/analyze\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(payload),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        setError(`Error analyzing food: ${data.error}`);\r\n      } else {\r\n        setResult(data);\r\n      }\r\n    } catch (error) {\r\n      setError(\"Error during upload or analysis. Please try again.\");\r\n      console.error(\"Error during analysis:\", error);\r\n    } finally {\r\n      setIsLoading(false); // Stop loading\r\n    }\r\n  };\r\n\r\n  const getCityFromCoordinates = async (latitude, longitude) => {\r\n    try {\r\n      const response = await fetch(`https://api.opencagedata.com/geocode/v1/json?q=${latitude}+${longitude}&key=YOUR_API_KEY`);\r\n      const data = await response.json();\r\n      return data.results[0]?.components.city || \"Unknown location\";\r\n    } catch (error) {\r\n      console.error(\"Error fetching city from coordinates:\", error);\r\n      return \"Unknown location\";\r\n    }\r\n  };\r\n\r\n  const uploadImageToCloudinary = async (image) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", image);\r\n    formData.append(\"upload_preset\", \"food123\");\r\n\r\n    try {\r\n      const response = await fetch(`https://api.cloudinary.com/v1_1/dmf3jzijx/image/upload`, {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.secure_url) {\r\n        return data.secure_url;\r\n      } else {\r\n        throw new Error(\"Failed to upload image\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Cloudinary upload error:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setImage(null);\r\n    setImagePreview(null);\r\n    setResult(null);\r\n    setError(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"food-container\">\r\n      <div className=\"food-header\">\r\n        <h1 className=\"food-title\">AI Food Analyzer</h1>\r\n      </div>\r\n      <p className=\"food-description\">\r\n        Upload or capture food photos to check for spoilage. Our AI ensures quality by detecting signs of freshness or decay.\r\n      </p>\r\n      <div className=\"upload-container\">\r\n        <input className=\"file-input\" type=\"file\" accept=\"image/*\" onChange={handleImageUpload} />\r\n        <button className=\"analyze-button\" onClick={handleCameraCapture}>üì∑ Capture from Camera</button>\r\n      </div>\r\n      <button className=\"analyze-button analyze-large\" onClick={analyzeFood} disabled={isLoading}>\r\n        {isLoading ? \"Analyzing...\" : \"üîç Analyze\"}\r\n      </button>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      {result && (\r\n        <div className=\"analysis-result\">\r\n          <div className=\"image-preview-container\">\r\n            <img className=\"image-preview-large\" src={imagePreview} alt=\"Analyzed food\" />\r\n          </div>\r\n          <div className=\"result-container\">\r\n            <p className=\"result-text\">üß™ Result: {result.status}</p>\r\n            {result.daysUntilSpoilage && (\r\n              <p className=\"result-text\">‚åõ Days Until Spoilage: {result.daysUntilSpoilage}</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n      <button className=\"reset-button\" onClick={handleReset}>üîÑ Reset</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Food;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}