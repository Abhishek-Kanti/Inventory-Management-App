{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodapp\\\\frontend\\\\src\\\\components\\\\Food.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './Food.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CLOUDINARY_UPLOAD_URL = \"https://api.cloudinary.com/v1_1/dmf3jzijx/image/upload\";\nconst CLOUDINARY_UPLOAD_PRESET = \"food123\"; // Your upload preset\nconst FAST_API_URL = \"https://foodapi-sa0l.onrender.com\"; // FastAPI endpoint\n\nconst Food = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [imageUrl, setImageUrl] = useState(null); // URL from Cloudinary\n  const [result, setResult] = useState(null);\n  const [location, setLocation] = useState(null);\n\n  // Handle image upload and preview\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setImage(file);\n      setImagePreview(URL.createObjectURL(file));\n    }\n  };\n\n  // Capture image from the camera\n  const handleCameraCapture = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: true\n    });\n    const videoElement = document.createElement('video');\n    videoElement.srcObject = stream;\n    videoElement.play();\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    videoElement.addEventListener('canplay', () => {\n      canvas.width = videoElement.videoWidth;\n      canvas.height = videoElement.videoHeight;\n      context.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\n      canvas.toBlob(blob => {\n        setImage(blob);\n        setImagePreview(canvas.toDataURL('image/jpeg'));\n        stream.getTracks().forEach(track => track.stop());\n      }, 'image/jpeg');\n    });\n  };\n\n  // Reset the form\n  const resetAnalysis = () => {\n    setImage(null);\n    setImagePreview(null);\n    setImageUrl(null);\n    setResult(null);\n    setLocation(null);\n    fetchLocationCity(); // Fetch location again for new analysis\n  };\n\n  // Capture user's city name using Geolocation\n  const fetchLocationCity = async () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n        try {\n          const response = await fetch(`https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${lat}&longitude=${lon}&localityLanguage=en`);\n          const data = await response.json();\n          setLocation(data.city || \"Unknown City\");\n        } catch (error) {\n          console.error(\"Error fetching city:\", error);\n          setLocation(\"Unknown City\");\n        }\n      }, error => {\n        console.error(\"Error fetching location:\", error);\n        alert(\"Unable to fetch location. Please enable location services.\");\n      });\n    } else {\n      alert(\"Geolocation is not supported by your browser.\");\n    }\n  };\n\n  // Upload image to Cloudinary and analyze food\n  const analyzeFood = async () => {\n    if (!image) {\n      alert(\"Please upload an image first.\");\n      return;\n    }\n    if (!location) {\n      alert(\"Fetching location. Please try again in a moment.\");\n      return;\n    }\n    try {\n      // Upload the image to Cloudinary\n      const formData = new FormData();\n      formData.append(\"file\", image);\n      formData.append(\"upload_preset\", CLOUDINARY_UPLOAD_PRESET);\n      const cloudinaryResponse = await axios.post(CLOUDINARY_UPLOAD_URL, formData);\n      const cloudinaryUrl = cloudinaryResponse.data.secure_url;\n      setImageUrl(cloudinaryUrl);\n\n      // Send the Cloudinary URL and location to FastAPI\n      const apiResponse = await axios.post(FAST_API_URL, {\n        image_url: cloudinaryUrl,\n        location: location\n      });\n      const data = apiResponse.data;\n\n      // Extract only the required details from the response\n      const isExpired = new Date(data.meta_data.exp_date) < new Date();\n      const daysToExpire = isExpired ? 0 : Math.ceil((new Date(data.meta_data.exp_date) - new Date()) / (1000 * 60 * 60 * 24));\n      setResult({\n        isExpired,\n        daysToExpire\n      });\n    } catch (error) {\n      console.error(\"Error analyzing food:\", error);\n      setResult({\n        isExpired: null,\n        daysToExpire: null\n      });\n    }\n  };\n\n  // Fetch location on component mount\n  useEffect(() => {\n    fetchLocationCity();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"food-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"food-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"food-title\",\n        children: \"AI Food Analyzer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"food-description\",\n      children: \"Upload or capture food photos to check for spoilage. Our AI ensures quality by detecting signs of freshness or decay.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"file-input\",\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"analyze-button\",\n        onClick: handleCameraCapture,\n        children: \"\\uD83D\\uDCF7 Capture from Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"analyze-button\",\n        onClick: analyzeFood,\n        children: \"\\uD83D\\uDD0D Analyze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-button\",\n        onClick: resetAnalysis,\n        children: \"\\uD83D\\uDD04 Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"image-preview-large\",\n          src: imagePreview,\n          alt: \"Analyzed food\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-container\",\n        children: result.isExpired !== null && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"result-text\",\n            children: result.isExpired ? \"⚠️ The food is expired.\" : `✅ The food is fresh. Days until expiry: ${result.daysToExpire}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(Food, \"Fu3HRPfFpcNMZbSC7e/ytD3deOA=\");\n_c = Food;\nexport default Food;\nvar _c;\n$RefreshReg$(_c, \"Food\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","CLOUDINARY_UPLOAD_URL","CLOUDINARY_UPLOAD_PRESET","FAST_API_URL","Food","_s","image","setImage","imagePreview","setImagePreview","imageUrl","setImageUrl","result","setResult","location","setLocation","handleImageUpload","e","file","target","files","URL","createObjectURL","handleCameraCapture","stream","navigator","mediaDevices","getUserMedia","video","videoElement","document","createElement","srcObject","play","canvas","context","getContext","addEventListener","width","videoWidth","height","videoHeight","drawImage","toBlob","blob","toDataURL","getTracks","forEach","track","stop","resetAnalysis","fetchLocationCity","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","response","fetch","data","json","city","error","console","alert","analyzeFood","formData","FormData","append","cloudinaryResponse","post","cloudinaryUrl","secure_url","apiResponse","image_url","isExpired","Date","meta_data","exp_date","daysToExpire","Math","ceil","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/foodapp/frontend/src/components/Food.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './Food.css';\r\nimport axios from 'axios';\r\n\r\nconst CLOUDINARY_UPLOAD_URL = \"https://api.cloudinary.com/v1_1/dmf3jzijx/image/upload\";\r\nconst CLOUDINARY_UPLOAD_PRESET = \"food123\"; // Your upload preset\r\nconst FAST_API_URL = \"https://foodapi-sa0l.onrender.com\"; // FastAPI endpoint\r\n\r\nconst Food = () => {\r\n  const [image, setImage] = useState(null);\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [imageUrl, setImageUrl] = useState(null); // URL from Cloudinary\r\n  const [result, setResult] = useState(null);\r\n  const [location, setLocation] = useState(null);\r\n\r\n  // Handle image upload and preview\r\n  const handleImageUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setImage(file);\r\n      setImagePreview(URL.createObjectURL(file));\r\n    }\r\n  };\r\n\r\n  // Capture image from the camera\r\n  const handleCameraCapture = async () => {\r\n    const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n    const videoElement = document.createElement('video');\r\n    videoElement.srcObject = stream;\r\n    videoElement.play();\r\n\r\n    const canvas = document.createElement('canvas');\r\n    const context = canvas.getContext('2d');\r\n\r\n    videoElement.addEventListener('canplay', () => {\r\n      canvas.width = videoElement.videoWidth;\r\n      canvas.height = videoElement.videoHeight;\r\n      context.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\r\n      canvas.toBlob((blob) => {\r\n        setImage(blob);\r\n        setImagePreview(canvas.toDataURL('image/jpeg'));\r\n        stream.getTracks().forEach(track => track.stop());\r\n      }, 'image/jpeg');\r\n    });\r\n  };\r\n\r\n  // Reset the form\r\n  const resetAnalysis = () => {\r\n    setImage(null);\r\n    setImagePreview(null);\r\n    setImageUrl(null);\r\n    setResult(null);\r\n    setLocation(null);\r\n    fetchLocationCity(); // Fetch location again for new analysis\r\n  };\r\n\r\n  // Capture user's city name using Geolocation\r\n  const fetchLocationCity = async () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        async (position) => {\r\n          const lat = position.coords.latitude;\r\n          const lon = position.coords.longitude;\r\n\r\n          try {\r\n            const response = await fetch(\r\n              `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${lat}&longitude=${lon}&localityLanguage=en`\r\n            );\r\n            const data = await response.json();\r\n            setLocation(data.city || \"Unknown City\");\r\n          } catch (error) {\r\n            console.error(\"Error fetching city:\", error);\r\n            setLocation(\"Unknown City\");\r\n          }\r\n        },\r\n        (error) => {\r\n          console.error(\"Error fetching location:\", error);\r\n          alert(\"Unable to fetch location. Please enable location services.\");\r\n        }\r\n      );\r\n    } else {\r\n      alert(\"Geolocation is not supported by your browser.\");\r\n    }\r\n  };\r\n\r\n  // Upload image to Cloudinary and analyze food\r\n  const analyzeFood = async () => {\r\n    if (!image) {\r\n      alert(\"Please upload an image first.\");\r\n      return;\r\n    }\r\n\r\n    if (!location) {\r\n      alert(\"Fetching location. Please try again in a moment.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Upload the image to Cloudinary\r\n      const formData = new FormData();\r\n      formData.append(\"file\", image);\r\n      formData.append(\"upload_preset\", CLOUDINARY_UPLOAD_PRESET);\r\n\r\n      const cloudinaryResponse = await axios.post(CLOUDINARY_UPLOAD_URL, formData);\r\n      const cloudinaryUrl = cloudinaryResponse.data.secure_url;\r\n      setImageUrl(cloudinaryUrl);\r\n\r\n      // Send the Cloudinary URL and location to FastAPI\r\n      const apiResponse = await axios.post(FAST_API_URL, {\r\n        image_url: cloudinaryUrl,\r\n        location: location,\r\n      });\r\n\r\n      const data = apiResponse.data;\r\n\r\n      // Extract only the required details from the response\r\n      const isExpired = new Date(data.meta_data.exp_date) < new Date();\r\n      const daysToExpire = isExpired\r\n        ? 0\r\n        : Math.ceil(\r\n            (new Date(data.meta_data.exp_date) - new Date()) /\r\n            (1000 * 60 * 60 * 24)\r\n          );\r\n\r\n      setResult({\r\n        isExpired,\r\n        daysToExpire,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error analyzing food:\", error);\r\n      setResult({\r\n        isExpired: null,\r\n        daysToExpire: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Fetch location on component mount\r\n  useEffect(() => {\r\n    fetchLocationCity();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"food-container\">\r\n      <div className=\"food-header\">\r\n        <h1 className=\"food-title\">AI Food Analyzer</h1>\r\n      </div>\r\n      <p className=\"food-description\">\r\n        Upload or capture food photos to check for spoilage. \r\n        Our AI ensures quality by detecting signs of freshness or decay.\r\n      </p>\r\n      <div className=\"upload-container\">\r\n        <input className=\"file-input\" type=\"file\" accept=\"image/*\" onChange={handleImageUpload} />\r\n        <button className=\"analyze-button\" onClick={handleCameraCapture}>📷 Capture from Camera</button>\r\n        <button className=\"analyze-button\" onClick={analyzeFood}>🔍 Analyze</button>\r\n        <button className=\"reset-button\" onClick={resetAnalysis}>🔄 Reset</button>\r\n      </div>\r\n      {result && (\r\n        <div className=\"analysis-result\">\r\n          <div className=\"image-preview-container\">\r\n            <img className=\"image-preview-large\" src={imagePreview} alt=\"Analyzed food\" />\r\n          </div>\r\n          <div className=\"result-container\">\r\n            {result.isExpired !== null && (\r\n              <>\r\n                <p className=\"result-text\">\r\n                  {result.isExpired\r\n                    ? \"⚠️ The food is expired.\"\r\n                    : `✅ The food is fresh. Days until expiry: ${result.daysToExpire}`}\r\n                </p>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Food;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}