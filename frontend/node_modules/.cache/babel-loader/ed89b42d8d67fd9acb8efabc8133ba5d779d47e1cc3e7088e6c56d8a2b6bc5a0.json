{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodapp\\\\frontend\\\\src\\\\components\\\\Food.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './Food.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Food = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setImage(file);\n      setImagePreview(URL.createObjectURL(file));\n    } else {\n      alert(\"No file selected. Please choose an image.\");\n    }\n  };\n  const handleCameraCapture = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      const videoElement = document.createElement('video');\n      videoElement.srcObject = stream;\n      videoElement.play();\n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n      videoElement.addEventListener('canplay', () => {\n        canvas.width = videoElement.videoWidth;\n        canvas.height = videoElement.videoHeight;\n        context.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\n        canvas.toBlob(blob => {\n          setImage(blob);\n          setImagePreview(canvas.toDataURL('image/jpeg'));\n          stream.getTracks().forEach(track => track.stop());\n        }, 'image/jpeg');\n      });\n    } catch (error) {\n      console.error(\"Error accessing camera:\", error);\n      alert(\"Unable to access camera. Please check permissions.\");\n    }\n  };\n  const getLocation = () => {\n    return new Promise((resolve, reject) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      } else {\n        reject(new Error(\"Geolocation is not supported by this browser.\"));\n      }\n    });\n  };\n  const getCityFromCoordinates = async (latitude, longitude) => {\n    try {\n      const response = await fetch(`https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${latitude}&longitude=${longitude}&localityLanguage=en`);\n      const data = await response.json();\n      return data.city || \"Unknown City\";\n    } catch (error) {\n      console.error(\"Error fetching city:\", error);\n      return \"Unknown City\";\n    }\n  };\n  const analyzeFood = async () => {\n    if (!image) {\n      alert(\"Please upload or capture an image first.\");\n      return;\n    }\n    try {\n      const location = await getLocation();\n      const {\n        latitude,\n        longitude\n      } = location.coords;\n      const city = await getCityFromCoordinates(latitude, longitude);\n      const formData = new FormData();\n      formData.append(\"file\", image);\n      formData.append(\"upload_preset\", \"food123\");\n      const uploadResponse = await fetch(`https://api.cloudinary.com/v1_1/dmf3jzijx/image/upload`, {\n        method: \"POST\",\n        body: formData\n      });\n      if (!uploadResponse.ok) {\n        throw new Error(\"Image upload failed. Unable to create a valid link.\");\n      }\n      const uploadData = await uploadResponse.json();\n      const imageUrl = uploadData.secure_url;\n      if (!imageUrl || !imageUrl.startsWith(\"http\")) {\n        throw new Error(\"Invalid image URL generated. Please try again.\");\n      }\n      const payload = {\n        image: imageUrl,\n        location: city\n      };\n      const response = await fetch(\"https://foodapi-sa0l.onrender.com/direct_img\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to analyze food. Please try again.\");\n      }\n      const data = await response.json();\n\n      // Update result state with a concise and meaningful summary\n      setResult({\n        status: data.result || \"No result available\",\n        details: `The food appears to be ${data.result.toLowerCase()} with approximately ${data.daysUntilSpoilage} days until spoilage.`\n      });\n      setError(null);\n    } catch (error) {\n      console.error(\"Error during upload or analysis:\", error);\n      setError(\"An error occurred while analyzing the image. Please try again.\");\n      setResult(null);\n    }\n  };\n  const resetAnalysis = () => {\n    setImage(null);\n    setImagePreview(null);\n    setResult(null);\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"food-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"food-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"food-title\",\n        children: \"AI Food Analyzer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"food-description\",\n      children: \"Upload or capture food photos to check for spoilage. Our AI ensures quality by detecting signs of freshness or decay.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"file-input\",\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"analyze-button\",\n        onClick: handleCameraCapture,\n        children: \"\\uD83D\\uDCF7 Capture from Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"analyze-button analyze-large\",\n      onClick: analyzeFood,\n      children: \"\\uD83D\\uDD0D Analyze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"image-preview-large\",\n          src: imagePreview,\n          alt: \"Analyzed food\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"result-text\",\n          children: [\"\\uD83E\\uDDEA \", result.details]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset-button\",\n      onClick: resetAnalysis,\n      children: \"\\uD83D\\uDD04 Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(Food, \"o2oLZ9JYXJ6wzbTbZ9u7NvEnnqk=\");\n_c = Food;\nexport default Food;\nvar _c;\n$RefreshReg$(_c, \"Food\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Food","_s","image","setImage","imagePreview","setImagePreview","result","setResult","error","setError","handleImageUpload","e","file","target","files","URL","createObjectURL","alert","handleCameraCapture","stream","navigator","mediaDevices","getUserMedia","video","videoElement","document","createElement","srcObject","play","canvas","context","getContext","addEventListener","width","videoWidth","height","videoHeight","drawImage","toBlob","blob","toDataURL","getTracks","forEach","track","stop","console","getLocation","Promise","resolve","reject","geolocation","getCurrentPosition","Error","getCityFromCoordinates","latitude","longitude","response","fetch","data","json","city","analyzeFood","location","coords","formData","FormData","append","uploadResponse","method","body","ok","uploadData","imageUrl","secure_url","startsWith","payload","headers","JSON","stringify","status","details","toLowerCase","daysUntilSpoilage","resetAnalysis","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/foodapp/frontend/src/components/Food.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './Food.css';\r\n\r\nconst Food = () => {\r\n  const [image, setImage] = useState(null);\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [result, setResult] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleImageUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setImage(file);\r\n      setImagePreview(URL.createObjectURL(file));\r\n    } else {\r\n      alert(\"No file selected. Please choose an image.\");\r\n    }\r\n  };\r\n\r\n  const handleCameraCapture = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n      const videoElement = document.createElement('video');\r\n      videoElement.srcObject = stream;\r\n      videoElement.play();\r\n\r\n      const canvas = document.createElement('canvas');\r\n      const context = canvas.getContext('2d');\r\n\r\n      videoElement.addEventListener('canplay', () => {\r\n        canvas.width = videoElement.videoWidth;\r\n        canvas.height = videoElement.videoHeight;\r\n        context.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\r\n        canvas.toBlob((blob) => {\r\n          setImage(blob);\r\n          setImagePreview(canvas.toDataURL('image/jpeg'));\r\n          stream.getTracks().forEach(track => track.stop());\r\n        }, 'image/jpeg');\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error accessing camera:\", error);\r\n      alert(\"Unable to access camera. Please check permissions.\");\r\n    }\r\n  };\r\n\r\n  const getLocation = () => {\r\n    return new Promise((resolve, reject) => {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(resolve, reject);\r\n      } else {\r\n        reject(new Error(\"Geolocation is not supported by this browser.\"));\r\n      }\r\n    });\r\n  };\r\n\r\n  const getCityFromCoordinates = async (latitude, longitude) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${latitude}&longitude=${longitude}&localityLanguage=en`\r\n      );\r\n      const data = await response.json();\r\n      return data.city || \"Unknown City\";\r\n    } catch (error) {\r\n      console.error(\"Error fetching city:\", error);\r\n      return \"Unknown City\";\r\n    }\r\n  };\r\n\r\n  const analyzeFood = async () => {\r\n    if (!image) {\r\n      alert(\"Please upload or capture an image first.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const location = await getLocation();\r\n      const { latitude, longitude } = location.coords;\r\n      const city = await getCityFromCoordinates(latitude, longitude);\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"file\", image);\r\n      formData.append(\"upload_preset\", \"food123\");\r\n\r\n      const uploadResponse = await fetch(`https://api.cloudinary.com/v1_1/dmf3jzijx/image/upload`, {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (!uploadResponse.ok) {\r\n        throw new Error(\"Image upload failed. Unable to create a valid link.\");\r\n      }\r\n\r\n      const uploadData = await uploadResponse.json();\r\n      const imageUrl = uploadData.secure_url;\r\n      if (!imageUrl || !imageUrl.startsWith(\"http\")) {\r\n        throw new Error(\"Invalid image URL generated. Please try again.\");\r\n      }\r\n\r\n      const payload = {\r\n        image: imageUrl,\r\n        location: city,\r\n      };\r\n\r\n      const response = await fetch(\"https://foodapi-sa0l.onrender.com/direct_img\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to analyze food. Please try again.\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      // Update result state with a concise and meaningful summary\r\n      setResult({\r\n        status: data.result || \"No result available\",\r\n        details: `The food appears to be ${data.result.toLowerCase()} with approximately ${data.daysUntilSpoilage} days until spoilage.`,\r\n      });\r\n\r\n      setError(null);\r\n    } catch (error) {\r\n      console.error(\"Error during upload or analysis:\", error);\r\n      setError(\"An error occurred while analyzing the image. Please try again.\");\r\n      setResult(null);\r\n    }\r\n  };\r\n\r\n  const resetAnalysis = () => {\r\n    setImage(null);\r\n    setImagePreview(null);\r\n    setResult(null);\r\n    setError(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"food-container\">\r\n      <div className=\"food-header\">\r\n        <h1 className=\"food-title\">AI Food Analyzer</h1>\r\n      </div>\r\n      <p className=\"food-description\">\r\n        Upload or capture food photos to check for spoilage. Our AI ensures quality by detecting signs of freshness or decay.\r\n      </p>\r\n      <div className=\"upload-container\">\r\n        <input className=\"file-input\" type=\"file\" accept=\"image/*\" onChange={handleImageUpload} />\r\n        <button className=\"analyze-button\" onClick={handleCameraCapture}>📷 Capture from Camera</button>\r\n      </div>\r\n      <button className=\"analyze-button analyze-large\" onClick={analyzeFood}>🔍 Analyze</button>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      {result && (\r\n        <div className=\"analysis-result\">\r\n          <div className=\"image-preview-container\">\r\n            <img className=\"image-preview-large\" src={imagePreview} alt=\"Analyzed food\" />\r\n          </div>\r\n          <div className=\"result-container\">\r\n            <p className=\"result-text\">🧪 {result.details}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <button className=\"reset-button\" onClick={resetAnalysis}>🔄 Reset</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Food;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}