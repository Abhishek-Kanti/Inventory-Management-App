{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodapp\\\\frontend\\\\src\\\\components\\\\Inventory.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Inventory.css\";\n\n// Firebase v9+ modular import\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase, ref, onValue } from \"firebase/database\";\n\n// Your Firebase configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB-L2pj_4XVH9y7VBYOSAsTsT8p4cveHZY\",\n  authDomain: \"foodai-7ebf0.firebaseapp.com\",\n  databaseURL: \"https://foodai-7ebf0-default-rtdb.firebaseio.com\",\n  projectId: \"foodai-7ebf0\",\n  storageBucket: \"foodai-7ebf0.firebasestorage.app\",\n  messagingSenderId: \"1802738846\",\n  appId: \"1:1802738846:web:f6985b95b8487ce3c7ef8f\",\n  measurementId: \"G-QJWXCZ7Y56\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\nconst Inventory = () => {\n  _s();\n  // State to store inventory data\n  const [inventory, setInventory] = useState([]);\n  useEffect(() => {\n    // Fetch data from Firebase Realtime Database\n    const inventoryRef = ref(database, \"/inventory\"); // Reference to the \"inventory\" node in Firebase\n\n    // Set up a real-time listener for changes in the data\n    onValue(inventoryRef, snapshot => {\n      const data = snapshot.val();\n      if (data) {\n        // Map the data to an array of categories and items\n        const formattedInventory = Object.keys(data).map(category => ({\n          category,\n          items: Object.values(data[category])\n        }));\n        setInventory(formattedInventory);\n      }\n    });\n\n    // Clean up the listener on unmount\n    return () => {\n      // No need to manually remove listeners in Firebase v9+ as `onValue` handles this automatically.\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inventory-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inventory-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"INVENTORY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inventory-content\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"inventory-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type of Food\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Food Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Expiry Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: inventory.map(category => category.items.length > 0 ? category.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [index === 0 && /*#__PURE__*/_jsxDEV(\"td\", {\n              rowSpan: category.items.length,\n              children: category.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.expiry\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this)]\n          }, `${category.category}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              rowSpan: \"1\",\n              children: category.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"3\",\n              children: \"[empty]\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this)]\n          }, category.category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Inventory, \"axcteRv9G+ZEedZY6HL2DNFxZDs=\");\n_c = Inventory;\nexport default Inventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["React","useEffect","useState","initializeApp","getDatabase","ref","onValue","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","database","Inventory","_s","inventory","setInventory","inventoryRef","snapshot","data","val","formattedInventory","Object","keys","map","category","items","values","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","item","index","rowSpan","name","quantity","expiry","colSpan","_c","$RefreshReg$"],"sources":["C:/foodapp/frontend/src/components/Inventory.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Inventory.css\";\r\n\r\n// Firebase v9+ modular import\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getDatabase, ref, onValue } from \"firebase/database\";\r\n\r\n// Your Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB-L2pj_4XVH9y7VBYOSAsTsT8p4cveHZY\",\r\n  authDomain: \"foodai-7ebf0.firebaseapp.com\",\r\n  databaseURL: \"https://foodai-7ebf0-default-rtdb.firebaseio.com\",\r\n  projectId: \"foodai-7ebf0\",\r\n  storageBucket: \"foodai-7ebf0.firebasestorage.app\",\r\n  messagingSenderId: \"1802738846\",\r\n  appId: \"1:1802738846:web:f6985b95b8487ce3c7ef8f\",\r\n  measurementId: \"G-QJWXCZ7Y56\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst database = getDatabase(app);\r\n\r\nconst Inventory = () => {\r\n  // State to store inventory data\r\n  const [inventory, setInventory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch data from Firebase Realtime Database\r\n    const inventoryRef = ref(database, \"/inventory\"); // Reference to the \"inventory\" node in Firebase\r\n\r\n    // Set up a real-time listener for changes in the data\r\n    onValue(inventoryRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      if (data) {\r\n        // Map the data to an array of categories and items\r\n        const formattedInventory = Object.keys(data).map((category) => ({\r\n          category,\r\n          items: Object.values(data[category]),\r\n        }));\r\n        setInventory(formattedInventory);\r\n      }\r\n    });\r\n\r\n    // Clean up the listener on unmount\r\n    return () => {\r\n      // No need to manually remove listeners in Firebase v9+ as `onValue` handles this automatically.\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"inventory-container\">\r\n      <div className=\"inventory-header\">\r\n        <h1>INVENTORY</h1>\r\n      </div>\r\n      <div className=\"inventory-content\">\r\n        <table className=\"inventory-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Type of Food</th>\r\n              <th>Food Item</th>\r\n              <th>Quantity</th>\r\n              <th>Expiry Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {inventory.map((category) =>\r\n              category.items.length > 0 ? (\r\n                category.items.map((item, index) => (\r\n                  <tr key={`${category.category}-${index}`}>\r\n                    {index === 0 && (\r\n                      <td rowSpan={category.items.length}>{category.category}</td>\r\n                    )}\r\n                    <td>{item.name}</td>\r\n                    <td>{item.quantity}</td>\r\n                    <td>{item.expiry}</td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr key={category.category}>\r\n                  <td rowSpan=\"1\">{category.category}</td>\r\n                  <td colSpan=\"3\">[empty]</td>\r\n                </tr>\r\n              )\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}